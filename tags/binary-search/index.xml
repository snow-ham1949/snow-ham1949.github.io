<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Binary Search on 隨寫日誌</title><link>https://snow-ham1949.github.io/tags/binary-search/</link><description>Recent content in Binary Search on 隨寫日誌</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Erin Li</copyright><lastBuildDate>Mon, 04 Sep 2023 21:49:45 +0000</lastBuildDate><atom:link href="https://snow-ham1949.github.io/tags/binary-search/index.xml" rel="self" type="application/rss+xml"/><item><title>浮點數二分搜技巧</title><link>https://snow-ham1949.github.io/posts/%E6%B5%AE%E9%BB%9E%E6%95%B8%E4%BA%8C%E5%88%86%E6%90%9C%E6%8A%80%E5%B7%A7/</link><pubDate>Mon, 04 Sep 2023 21:49:45 +0000</pubDate><guid>https://snow-ham1949.github.io/posts/%E6%B5%AE%E9%BB%9E%E6%95%B8%E4%BA%8C%E5%88%86%E6%90%9C%E6%8A%80%E5%B7%A7/</guid><description>今天寫了這題才知道原來浮點數二分搜要這樣寫。 原本我以為應該是要根據他想要的浮點數誤誤差當作 eps，然後寫成這樣 while (r - l &amp;gt; eps) { do binary search } 但那樣的</description></item><item><title>二分搜技巧</title><link>https://snow-ham1949.github.io/posts/%E4%BA%8C%E5%88%86%E6%90%9C%E6%8A%80%E5%B7%A7/</link><pubDate>Sun, 06 Aug 2023 19:38:47 +0000</pubDate><guid>https://snow-ham1949.github.io/posts/%E4%BA%8C%E5%88%86%E6%90%9C%E6%8A%80%E5%B7%A7/</guid><description>上次團練的時候被學長建議了這種寫法，所以記錄一下。以往我都是寫 while (l &amp;lt; r) { int m = (l + r) &amp;gt;&amp;gt; 1; if (chk(m)) r = m; else l = m + 1; } 但有時候就會搞不清楚自己到底</description></item><item><title>Leetcode 792. Number of Matching Subsequences</title><link>https://snow-ham1949.github.io/posts/leetcode-792-number-of-matching-subsequences/</link><pubDate>Wed, 20 Jul 2022 14:07:36 +0000</pubDate><guid>https://snow-ham1949.github.io/posts/leetcode-792-number-of-matching-subsequences/</guid><description>試著記得每次都要寫複雜度（？ 題目 link 作法 一開始看到 tag 以為真的要寫 trie，後來才發現不用（用 trie 我也不會寫），用二分搜就可以了。 概念是先去紀錄 s</description></item></channel></rss>