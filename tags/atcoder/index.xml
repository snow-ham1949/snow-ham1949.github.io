<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Atcoder on 隨寫日誌</title><link>https://snow-ham1949.github.io/tags/atcoder/</link><description>Recent content in Atcoder on 隨寫日誌</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Erin Li</copyright><lastBuildDate>Sun, 20 Aug 2023 21:42:01 +0000</lastBuildDate><atom:link href="https://snow-ham1949.github.io/tags/atcoder/index.xml" rel="self" type="application/rss+xml"/><item><title>Atcoder Beginner Contest 315 題解</title><link>https://snow-ham1949.github.io/posts/atcoder-beginner-contest-315-%E9%A1%8C%E8%A7%A3/</link><pubDate>Sun, 20 Aug 2023 21:42:01 +0000</pubDate><guid>https://snow-ham1949.github.io/posts/atcoder-beginner-contest-315-%E9%A1%8C%E8%A7%A3/</guid><description>A - tcdr 直接跳過 aeiou 輸出就好 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef long long ll; typedef pair&amp;lt;int, int&amp;gt; pii; typedef pair&amp;lt;ll, ll&amp;gt; pll; #define SZ(a) (int)(a).size() #define ALL(v) (v).begin(), (v).end() #define X first #define Y second #define dbg(x) cerr &amp;lt;&amp;lt; #x &amp;lt;&amp;lt; &amp;#34; = &amp;#34; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; void solve() { string s; cin &amp;gt;&amp;gt; s; for (int i = 0; s[i]; i++)</description></item><item><title>Atcoder Beginner Contest 312 題解</title><link>https://snow-ham1949.github.io/posts/atcoder-beginner-contest-312-%E9%A1%8C%E8%A7%A3/</link><pubDate>Thu, 17 Aug 2023 21:57:46 +0000</pubDate><guid>https://snow-ham1949.github.io/posts/atcoder-beginner-contest-312-%E9%A1%8C%E8%A7%A3/</guid><description>A - Chord 判斷一下就好了。 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef long long ll; typedef pair&amp;lt;int, int&amp;gt; pii; typedef pair&amp;lt;ll, ll&amp;gt; pll; #define SZ(a) (int)(a).size() #define ALL(v) (v).begin(), (v).end() #define X first #define Y second #define dbg(x) cerr &amp;lt;&amp;lt; #x &amp;lt;&amp;lt; &amp;#34; = &amp;#34; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; string ss[7] = {&amp;#34;ACE&amp;#34;, &amp;#34;BDF&amp;#34;, &amp;#34;CEG&amp;#34;, &amp;#34;DFA&amp;#34;, &amp;#34;EGB&amp;#34;, &amp;#34;FAC&amp;#34;, &amp;#34;GBD&amp;#34;}; void solve() { string s; cin</description></item><item><title>Atcoder Beginner Contest 313 題解</title><link>https://snow-ham1949.github.io/posts/atcoder-beginner-contest-313-%E9%A1%8C%E8%A7%A3/</link><pubDate>Wed, 16 Aug 2023 19:59:22 +0000</pubDate><guid>https://snow-ham1949.github.io/posts/atcoder-beginner-contest-313-%E9%A1%8C%E8%A7%A3/</guid><description>A - To be Saikyo 直接找最大的是多少就好，注意要特判一下如果第一個就是最大的且沒有人跟他一樣大就不用加，不然還是要 +1。 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef long long ll; typedef pair&amp;lt;int, int&amp;gt; pii; typedef</description></item><item><title>Atcoder Beginner Contest 314 題解</title><link>https://snow-ham1949.github.io/posts/atcoder-beginner-contest-314-%E9%A1%8C%E8%A7%A3/</link><pubDate>Mon, 14 Aug 2023 21:36:48 +0000</pubDate><guid>https://snow-ham1949.github.io/posts/atcoder-beginner-contest-314-%E9%A1%8C%E8%A7%A3/</guid><description>A - 3.14 直接複製一下題目然後輸出就好了 #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef long long ll; typedef pair&amp;lt;int, int&amp;gt; pii; typedef pair&amp;lt;ll, ll&amp;gt; pll; #define SZ(a) (int)(a).size() #define ALL(v) (v).begin(), (v).end() #define X first #define Y second #define dbg(x) cerr &amp;lt;&amp;lt; #x &amp;lt;&amp;lt; &amp;#34; = &amp;#34; &amp;lt;&amp;lt; x &amp;lt;&amp;lt; endl; string pi = &amp;#34;3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679&amp;#34;; void solve() { int n;</description></item><item><title>Atcoder DP contest (持續更新中)</title><link>https://snow-ham1949.github.io/posts/atcoder-dp-contest/</link><pubDate>Sun, 28 Aug 2022 19:12:56 +0000</pubDate><guid>https://snow-ham1949.github.io/posts/atcoder-dp-contest/</guid><description>紀錄一下自己練習 dp 的過程，最近在寫 icpc 培訓班的作業感受到自己的 dp 實在是太爛了&amp;hellip; 剛好被推薦有這個題單可以練習，所以就順便把自己不會</description></item></channel></rss>